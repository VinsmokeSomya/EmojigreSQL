name: Release EmojigreSQL

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v1.0.1, v2.0 etc.

permissions:
  contents: write # Needed to create releases
  packages: write # Needed to push docker image packages

jobs:
  release:
    name: Build, Push Docker & Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get the tag name
        id: get_tag
        # Extract the tag name from the GITHUB_REF environment variable
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Use the GitHub username that triggered the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Use the automatically generated token

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/emojigresql # Use owner from context
          tags: |
            type=semver,pattern={{version}} # Use the Git tag directly (e.g., v1.0.1)
            type=semver,pattern={{major}}.{{minor}} # e.g., v1.0
            type=semver,pattern={{major}} # e.g., v1
            type=sha # Add git sha tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # GITHUB_TOKEN is provided by default.
          tag_name: ${{ steps.get_tag.outputs.tag }} # Use the tag that triggered the workflow
          name: Release ${{ steps.get_tag.outputs.tag }} # Name the release e.g., "Release v1.0.1"
          # body: | # Optional: Add custom release notes here or leave blank for auto-generated
          #  Release notes for ${{ steps.get_tag.outputs.tag }}
          #
          #  - Feature A
          #  - Bugfix B
          draft: false
          prerelease: false
          # generate_release_notes: true # Uncomment if you want automatic release notes based on PRs 